Call by Value:

- In "call by value," a copy of the variable is 
passed to the function. Any changes made 
inside the function do not affect the original 
variable.

- In call by value, when you pass a variable to a 
function, a copy of the value is made and passed 
to the function. This means that any changes made 
to the copy inside the function do not affect the 
original variable in the calling function.

- Here, a is a local variable within the callByValue 
function. When you call callByValue(x), the value of 
x (which is 10) is copied into a. So, a has the same 
value as x, but it's a separate, independent variable.
The line a = 20; changes the value of the local 
variable a to 20, but since a is a copy, this 
change does not affect the original variable x in 
the main function.

Call by Reference:

- In "call by reference," the address (or reference) 
of the variable is passed. Changes made inside the 
function affect the original variable.

